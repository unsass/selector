// ============================================================================================= //
//                                            MIXINS                                             //
// ============================================================================================= //

@use "sass:map";
@use "sass:meta";
@use "sass:selector";

// ------------------------------------------------------------------------- //
// Privates functions
// ------------------------------------------------------------------------- //

// ...

// ------------------------------------------------------------------------- //
// Public functions
// ------------------------------------------------------------------------- //

@function pseudo-class($selector, $pseudo-class) {
    @return selector.append($selector, ":#{$pseudo-class}");
}

@function pseudo-element($selector, $pseudo-element) {
    @return selector.append($selector, "::#{$pseudo-element}");
}

@function to-id($selector) {
    @return "##{$selector}";
}

@function to-class($selector) {
    @return ".#{$selector}";
}

///
/// Number.
///
@function number($value) {
    @if meta.type-of($value) == "number" {
        @return $value;
    } @else if meta.type-of($value) != "string" {
        @error "Invalid string type for `#{$value}` value. Use string type instead.";
    }

    $numbers: (
        "0": 0,
        "1": 1,
        "2": 2,
        "3": 3,
        "4": 4,
        "5": 5,
        "6": 6,
        "7": 7,
        "8": 8,
        "9": 9
    );

    @return map.get($numbers, $value);
}
